function night() {
    //console.log("执行night();")

    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function change_byclassname(cla_name, new_style) {
        var eml = document.getElementsByClassName(cla_name);
        //console.log(cla_name, "   change :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            eml[i].style.cssText = new_style;
        }
    }


    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function change_byTagname(tag_name, new_style) {
        var eml = document.getElementsByTagName(tag_name);
        //console.log(tag_name, "   change :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style + new_style;
        }
    }

    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function add_byclassname(cla_name, new_style) {
        var eml = document.getElementsByClassName(cla_name);
        //console.log(cla_name, "   add :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style + new_style;
        }
    }



    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function add_byTagname(tag_name, new_style) {
        var eml = document.getElementsByTagName(tag_name);
        //console.log(tag_name, "   add :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style + new_style;
        }
    }

    //Id
    //new_style 新的样式
    function add_byId(Id, new_style) {
        var eml = document.getElementById(Id);
        //console.log(Id, "   add :  ", eml);
        if (eml != null) {
            var old_style = eml.style.cssText;
            //console.log(Id, "   css :  ", old_style);
            eml.style.cssText = old_style + new_style;
        }
    }

    //添加style，修改before等伪类样式
    function loadStyleString(css) {
        var style = document.createElement("style");
        style.type = "text/css";
        try {
            style.appendChild(document.createTextNode(css));
        } catch (ex) {
            style.styleSheet.cssText = css;
        }
        var head = document.getElementsByTagName('head')[0];
        head.appendChild(style);
        //console.log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    }





    //cla_name-》classname 样式类名称
    //del_style 需要删除的样式
    function sub_byclassname(cla_name, del_style) {
        var eml = document.getElementsByClassName(cla_name);
        //console.log(cla_name, "   sub :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style - del_style;
        }
    }



    //cla_name-》classname 样式类名称
    //del_style 需要删除的样式
    function sub_byTagname(tag_name, del_style) {
        var eml = document.getElementsByTagName(tag_name);
        //console.log(tag_name, "   sub :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style - del_style;
        }
    }


    //Id
    //del_style 新的样式
    function sub_byId(Id, del_style) {
        var eml = document.getElementById(Id);
        //console.log(Id, "   sub :  ", eml);
        if (eml != null) {
            var old_style = eml.style.cssText;
            //console.log(Id, "   css :  ", old_style);
            eml.style.cssText = old_style - del_style;
        }
    }


    change_byclassname("bg-grey", "background-color: #292a2d !important");
    change_byclassname("bg-white", "background-color: #3d3e42 !important");
    //输入框
    add_byclassname("input", "color: #ffffff;background-color: #292a2d !important;");
    //文章内容底色
    add_byclassname("post-content", "background: #292a2d !important;");
    //文章内标题
    add_byTagname("p", "color: #a9a9b3 !important;");
    //代码样式
    add_byTagname("code", "color: #a9a9b3 !important; background-color: rgb(91 92 96) !important;");
    add_byclassname("highlight", "background: #292a2d;");
    //表格样式
    add_byTagname("tr", "background-color: #a6a8b1;color: aliceblue;");
    //所有超链接改变样式
    add_byTagname("a", "color: #dbdbe2 ;");
    change_byclassname("post-bottom-bar", "border-top: 1px solid #4c4e55 !important;background-color: #3d3e42 !important;");
    //h1-h8标题样式
    for (var j = 1; j <= 8; j++) {
        add_byTagname("h" + j, "color: #dbdbe2; !important;");
    }
    //分类页面标题样式
    add_byclassname("categorys-title", "color: #dbdbe2 !important;");
    //add_byclassname("post-list-item-container", "background: #2d2d2d !important;");//似乎也是没用的
    //首页文章展示底部色块
    add_byclassname("item-slant", "background: #2d2d2d !important;");
    add_byclassname("item-label", "background: #2d2d2d !important;");
    //add_byclassname("item-desc", "background: background-color: rgba(0,0,0,.5) !important;");
    add_byclassname("bottom-bar-item", "color: #dbdbe2 !important;");
    //图片变暗
    add_byTagname("img", "-webkit-filter: brightness(50%) !important;filter: brightness(50%) !important;");
    //首页文章展示封面变暗
    add_byclassname("post-list-item-container", "-webkit-filter: brightness(50%) !important;filter: brightness(50%) !important;");
    //搜索图标样式
    add_byclassname("icon-search", "color: #c3c3ca !important;");
    //文章头部信息样式
    add_byclassname("post-header-thumb-op", "margin-top: -5px;");
    //手机菜单样式
    add_byclassname("middle", "background: #dbdbe2 !important;");
    loadStyleString(".icon-menu:before {background: #dbdbe2 !important;}");
    loadStyleString(".icon-menu:after {background: #dbdbe2 !important;}");
    //索引前缀'·'显示
    loadStyleString("::marker {color: rgb(255 255 255) !important;}");
    //评论样式
    add_byclassname("vinput", "color: #dbdbe2;");
    //搜索界面标题样式
    add_byclassname("common-title", "color: #ffffff;");
    //搜索界面搜索框样式
    add_byId("search-input", "color: #dbdbe2 !important;;");
    //搜索结果展示
    add_byId("results-container", "color: aliceblue;");
    add_byTagname("li", "color: aliceblue !important;")
    //切换日夜图标显示
    change_byclassname("night_button", "display: none;");
    change_byclassname("day_button", "display: initial;color: #dbdbe2 ;");

    console.log("night()执行完成！")
}





function day() {
    //console.log("执行day();")

    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function change_byclassname(cla_name, new_style) {
        var eml = document.getElementsByClassName(cla_name);
        //console.log(cla_name, "   change :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            eml[i].style.cssText = new_style;
        }
    }


    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function change_byTagname(tag_name, new_style) {
        var eml = document.getElementsByTagName(tag_name);
        //console.log(tag_name, "   change :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style + new_style;
        }
    }

    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function add_byclassname(cla_name, new_style) {
        var eml = document.getElementsByClassName(cla_name);
        //console.log(cla_name, "   add :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style + new_style;
        }
    }



    //cla_name-》classname 样式类名称
    //new_style 新的样式
    function add_byTagname(tag_name, new_style) {
        var eml = document.getElementsByTagName(tag_name);
        //console.log(tag_name, "   add :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style + new_style;
        }
    }

    //Id
    //new_style 新的样式
    function add_byId(Id, new_style) {
        var eml = document.getElementById(Id);
        //console.log(Id, "   add :  ", eml);
        if (eml != null) {
            var old_style = eml.style.cssText;
            //console.log(Id, "   css :  ", old_style);
            eml.style.cssText = old_style + new_style;
        }
    }

    //添加style，修改before等伪类样式
    function loadStyleString(css) {
        var style = document.createElement("style");
        style.type = "text/css";
        try {
            style.appendChild(document.createTextNode(css));
        } catch (ex) {
            style.styleSheet.cssText = css;
        }
        var head = document.getElementsByTagName('head')[0];
        head.appendChild(style);
        //console.log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    }





    //cla_name-》classname 样式类名称
    //del_style 需要删除的样式
    function sub_byclassname(cla_name, del_style) {
        var eml = document.getElementsByClassName(cla_name);
        //console.log(cla_name, "   sub :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style - del_style;
        }
    }



    //cla_name-》classname 样式类名称
    //del_style 需要删除的样式
    function sub_byTagname(tag_name, del_style) {
        var eml = document.getElementsByTagName(tag_name);
        //console.log(tag_name, "   sub :  ", eml);
        var i, len;
        for (i = 0, len = eml.length; i < len; i++) {
            //console.log(eml[i].style.cssText);
            var old_style = eml[i].style.cssText;
            eml[i].style.cssText = old_style - del_style;
        }
    }


    //Id
    //del_style 新的样式
    function sub_byId(Id, del_style) {
        var eml = document.getElementById(Id);
        //console.log(Id, "   sub :  ", eml);
        if (eml != null) {
            var old_style = eml.style.cssText;
            //console.log(Id, "   css :  ", old_style);
            eml.style.cssText = old_style - del_style;
        }
    }



    //主体body颜色
    change_byclassname("bg-grey", "background-color: #f7f7f7!important;");
    //header和footer颜色
    change_byclassname("bg-white", "background-color: #fff!important;");
    //输入框
    sub_byclassname("input", "color: #ffffff;background-color: #292a2d !important;");
    //文章内容底色
    change_byclassname("post-content", "background-color: #f7f7f7!important;");
    //文章内标题
    sub_byTagname("p", "color: #a9a9b3 !important;");
    //代码样式
    sub_byTagname("code", "color: #a9a9b3 !important; background-color: rgb(91 92 96) !important;");
    sub_byclassname("highlight", "background: #292a2d;");
    //表格样式
    sub_byTagname("tr", "background-color: #a6a8b1;color: aliceblue;");
    //所有超链接改变样式
    sub_byTagname("a", "color: #dbdbe2 ;");
    sub_byclassname("post-bottom-bar", "border-top: 1px solid #4c4e55 !important;background-color: #3d3e42 !important;");
    //h1-h8标题样式
    for (var j = 1; j <= 8; j++) {
        sub_byTagname("h" + j, "color: #dbdbe2; !important;");
    }
    //分类页面标题样式
    sub_byclassname("categorys-title", "color: #dbdbe2 !important;");
    //sub_byclassname("post-list-item-container", "background: #2d2d2d !important;");
    //首页文章展示底部色块
    sub_byclassname("item-slant", "background: #2d2d2d !important;");
    sub_byclassname("item-label", "background: #2d2d2d !important;");
    //sub_byclassname("item-desc", "background: background-color: rgba(0,0,0,.5) !important;");//似乎没用忘删了
    sub_byclassname("bottom-bar-item", "color: #dbdbe2 !important;");
    //图片变暗
    sub_byTagname("img", "-webkit-filter: brightness(50%) !important;filter: brightness(50%) !important;");
    //首页文章展示封面图片变暗
    sub_byclassname("post-list-item-container", "-webkit-filter: brightness(50%) !important;filter: brightness(50%) !important;");
    //搜索图标样式
    sub_byclassname("icon-search", "color: #c3c3ca !important;");
    //文章头部信息样式
    //sub_byclassname("post-header-thumb-op", "margin-top: -5px;");//影响文章页封面显示
    //手机菜单样式
    sub_byclassname("middle", "background: #dbdbe2 !important;");
    loadStyleString(".icon-menu:before {background: #313131 !important;}");
    loadStyleString(".icon-menu:after {background: #313131 !important;}");
    //索引前缀'·'显示
    loadStyleString("::marker {color: #222222 !important;}");
    //评论样式
    sub_byclassname("vinput", "color: #dbdbe2;");
    //搜索界面标题样式
    sub_byclassname("common-title", "color: #ffffff;");
    //搜索界面搜索框样式
    add_byId("search-input", "color: #333333 !important;");
    //搜索结果展示
    sub_byId("results-container", "color: aliceblue;");
    sub_byTagname("li", "color: aliceblue !important;");
    //切换日夜图标显示
    change_byclassname("day_button", "display: none;");
    change_byclassname("night_button", "display: initial;");

    console.log("day()执行完成！")
}